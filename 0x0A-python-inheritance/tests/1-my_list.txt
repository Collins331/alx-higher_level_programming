"""import a subclass from a module and call a method from the subclass
    Args:
        MyList: subclass of list
        my_list: instance of MyList
    Returns:
        Nothing"""
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.append(-3)
>>> my_list.append(5)
>>> my_list.append(-4)
>>> print(my_list)
[2, 1, -3, 5, -4]
>>> my_list.print_sorted()
[-4, -3, 1, 2, 5]

```checking for docstring in a module
    Args:
        module: module to check
    Returns:
        True if module has a docstring, False otherwise"""
>>> module = __import__('1-my_list').__doc__
>>> len(module) >= 1
True

"""checking for subclass"""

>>> MyList = __import__('1-my_list').MyList
>>> issubclass(MyList, list)
True

"""validating number of arguments"""
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.append(-3)
>>> my_list.append(5)
>>> my_list.append(-4)
>>> my_list.print_sorted(23)
Traceback (most recent call last):
...
TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given
